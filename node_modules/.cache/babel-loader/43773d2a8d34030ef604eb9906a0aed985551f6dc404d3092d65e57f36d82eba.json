{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\nimport Select from '../../addons/Select';\nimport Dropdown from '../../modules/Dropdown';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Select} />.\n * @see Form\n * @see Select\n */\n\nfunction FormSelect(props) {\n  var control = props.control,\n    options = props.options;\n  var rest = getUnhandledProps(FormSelect, props);\n  var ElementType = getElementType(FormSelect, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    control: control,\n    options: options\n  }));\n}\nFormSelect.handledProps = [\"as\", \"control\", \"options\"];\nFormSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** A FormField control prop. */\n  control: FormField.propTypes.control,\n  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */\n  options: PropTypes.arrayOf(PropTypes.shape(Dropdown.Item.propTypes)).isRequired\n} : {};\nFormSelect.defaultProps = {\n  as: FormField,\n  control: Select\n};\nexport default FormSelect;","map":{"version":3,"names":["_extends","PropTypes","React","getElementType","getUnhandledProps","Select","Dropdown","FormField","FormSelect","props","control","options","rest","ElementType","createElement","handledProps","propTypes","process","env","NODE_ENV","as","elementType","arrayOf","shape","Item","isRequired","defaultProps"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/collections/Form/FormSelect.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\nimport Select from '../../addons/Select';\nimport Dropdown from '../../modules/Dropdown';\nimport FormField from './FormField';\n/**\n * Sugar for <Form.Field control={Select} />.\n * @see Form\n * @see Select\n */\n\nfunction FormSelect(props) {\n  var control = props.control,\n      options = props.options;\n  var rest = getUnhandledProps(FormSelect, props);\n  var ElementType = getElementType(FormSelect, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    control: control,\n    options: options\n  }));\n}\n\nFormSelect.handledProps = [\"as\", \"control\", \"options\"];\nFormSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control,\n\n  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */\n  options: PropTypes.arrayOf(PropTypes.shape(Dropdown.Item.propTypes)).isRequired\n} : {};\nFormSelect.defaultProps = {\n  as: FormField,\n  control: Select\n};\nexport default FormSelect;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,WAAW;AAC7D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,aAAa;AACnC;AACA;AACA;AACA;AACA;;AAEA,SAASC,UAAU,CAACC,KAAK,EAAE;EACzB,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;IACvBC,OAAO,GAAGF,KAAK,CAACE,OAAO;EAC3B,IAAIC,IAAI,GAAGR,iBAAiB,CAACI,UAAU,EAAEC,KAAK,CAAC;EAC/C,IAAII,WAAW,GAAGV,cAAc,CAACK,UAAU,EAAEC,KAAK,CAAC;EACnD,OAAO,aAAaP,KAAK,CAACY,aAAa,CAACD,WAAW,EAAEb,QAAQ,CAAC,CAAC,CAAC,EAAEY,IAAI,EAAE;IACtEF,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA;EACX,CAAC,CAAC,CAAC;AACL;AAEAH,UAAU,CAACO,YAAY,GAAG,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,CAAC;AACtDP,UAAU,CAACQ,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC7D;EACAC,EAAE,EAAEnB,SAAS,CAACoB,WAAW;EAEzB;EACAX,OAAO,EAAEH,SAAS,CAACS,SAAS,CAACN,OAAO;EAEpC;EACAC,OAAO,EAAEV,SAAS,CAACqB,OAAO,CAACrB,SAAS,CAACsB,KAAK,CAACjB,QAAQ,CAACkB,IAAI,CAACR,SAAS,CAAC,CAAC,CAACS;AACvE,CAAC,GAAG,CAAC,CAAC;AACNjB,UAAU,CAACkB,YAAY,GAAG;EACxBN,EAAE,EAAEb,SAAS;EACbG,OAAO,EAAEL;AACX,CAAC;AACD,eAAeG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}