{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createShorthandFactory, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport Icon from '../Icon/Icon';\n/**\n * A list item can contain an icon.\n */\n\nfunction ListIcon(props) {\n  var className = props.className,\n    verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(ListIcon, props);\n  return /*#__PURE__*/React.createElement(Icon, _extends({}, rest, {\n    className: classes\n  }));\n}\nListIcon.handledProps = [\"className\", \"verticalAlign\"];\nListIcon.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListIcon.create = createShorthandFactory(ListIcon, function (name) {\n  return {\n    name: name\n  };\n});\nexport default ListIcon;","map":{"version":3,"names":["_extends","cx","PropTypes","React","createShorthandFactory","getUnhandledProps","SUI","useVerticalAlignProp","Icon","ListIcon","props","className","verticalAlign","classes","rest","createElement","handledProps","propTypes","process","env","NODE_ENV","string","oneOf","VERTICAL_ALIGNMENTS","create","name"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/elements/List/ListIcon.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createShorthandFactory, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport Icon from '../Icon/Icon';\n/**\n * A list item can contain an icon.\n */\n\nfunction ListIcon(props) {\n  var className = props.className,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(ListIcon, props);\n  return /*#__PURE__*/React.createElement(Icon, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nListIcon.handledProps = [\"className\", \"verticalAlign\"];\nListIcon.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListIcon.create = createShorthandFactory(ListIcon, function (name) {\n  return {\n    name: name\n  };\n});\nexport default ListIcon;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,EAAE,MAAM,MAAM;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,sBAAsB,EAAEC,iBAAiB,EAAEC,GAAG,EAAEC,oBAAoB,QAAQ,WAAW;AAChG,OAAOC,IAAI,MAAM,cAAc;AAC/B;AACA;AACA;;AAEA,SAASC,QAAQ,CAACC,KAAK,EAAE;EACvB,IAAIC,SAAS,GAAGD,KAAK,CAACC,SAAS;IAC3BC,aAAa,GAAGF,KAAK,CAACE,aAAa;EACvC,IAAIC,OAAO,GAAGZ,EAAE,CAACM,oBAAoB,CAACK,aAAa,CAAC,EAAED,SAAS,CAAC;EAChE,IAAIG,IAAI,GAAGT,iBAAiB,CAACI,QAAQ,EAAEC,KAAK,CAAC;EAC7C,OAAO,aAAaP,KAAK,CAACY,aAAa,CAACP,IAAI,EAAER,QAAQ,CAAC,CAAC,CAAC,EAAEc,IAAI,EAAE;IAC/DH,SAAS,EAAEE;EACb,CAAC,CAAC,CAAC;AACL;AAEAJ,QAAQ,CAACO,YAAY,GAAG,CAAC,WAAW,EAAE,eAAe,CAAC;AACtDP,QAAQ,CAACQ,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC3D;EACAT,SAAS,EAAET,SAAS,CAACmB,MAAM;EAE3B;EACAT,aAAa,EAAEV,SAAS,CAACoB,KAAK,CAAChB,GAAG,CAACiB,mBAAmB;AACxD,CAAC,GAAG,CAAC,CAAC;AACNd,QAAQ,CAACe,MAAM,GAAGpB,sBAAsB,CAACK,QAAQ,EAAE,UAAUgB,IAAI,EAAE;EACjE,OAAO;IACLA,IAAI,EAAEA;EACR,CAAC;AACH,CAAC,CAAC;AACF,eAAehB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}