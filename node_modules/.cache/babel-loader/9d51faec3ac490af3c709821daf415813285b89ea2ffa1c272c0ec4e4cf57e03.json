{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createHTMLImage, getElementType, getUnhandledProps, htmlImageProps, partitionHTMLProps } from '../../lib';\n/**\n * A comment can contain an image or avatar.\n */\n\nfunction CommentAvatar(props) {\n  var className = props.className,\n    src = props.src;\n  var classes = cx('avatar', className);\n  var rest = getUnhandledProps(CommentAvatar, props);\n  var _partitionHTMLProps = partitionHTMLProps(rest, {\n      htmlProps: htmlImageProps\n    }),\n    imageProps = _partitionHTMLProps[0],\n    rootProps = _partitionHTMLProps[1];\n  var ElementType = getElementType(CommentAvatar, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rootProps, {\n    className: classes\n  }), createHTMLImage(src, {\n    autoGenerateKey: false,\n    defaultProps: imageProps\n  }));\n}\nCommentAvatar.handledProps = [\"as\", \"className\", \"src\"];\nCommentAvatar.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Specifies the URL of the image. */\n  src: PropTypes.string\n} : {};\nexport default CommentAvatar;","map":{"version":3,"names":["_extends","cx","PropTypes","React","createHTMLImage","getElementType","getUnhandledProps","htmlImageProps","partitionHTMLProps","CommentAvatar","props","className","src","classes","rest","_partitionHTMLProps","htmlProps","imageProps","rootProps","ElementType","createElement","autoGenerateKey","defaultProps","handledProps","propTypes","process","env","NODE_ENV","as","elementType","string"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/views/Comment/CommentAvatar.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createHTMLImage, getElementType, getUnhandledProps, htmlImageProps, partitionHTMLProps } from '../../lib';\n/**\n * A comment can contain an image or avatar.\n */\n\nfunction CommentAvatar(props) {\n  var className = props.className,\n      src = props.src;\n  var classes = cx('avatar', className);\n  var rest = getUnhandledProps(CommentAvatar, props);\n\n  var _partitionHTMLProps = partitionHTMLProps(rest, {\n    htmlProps: htmlImageProps\n  }),\n      imageProps = _partitionHTMLProps[0],\n      rootProps = _partitionHTMLProps[1];\n\n  var ElementType = getElementType(CommentAvatar, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rootProps, {\n    className: classes\n  }), createHTMLImage(src, {\n    autoGenerateKey: false,\n    defaultProps: imageProps\n  }));\n}\n\nCommentAvatar.handledProps = [\"as\", \"className\", \"src\"];\nCommentAvatar.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Specifies the URL of the image. */\n  src: PropTypes.string\n} : {};\nexport default CommentAvatar;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,EAAE,MAAM,MAAM;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,kBAAkB,QAAQ,WAAW;AAClH;AACA;AACA;;AAEA,SAASC,aAAa,CAACC,KAAK,EAAE;EAC5B,IAAIC,SAAS,GAAGD,KAAK,CAACC,SAAS;IAC3BC,GAAG,GAAGF,KAAK,CAACE,GAAG;EACnB,IAAIC,OAAO,GAAGZ,EAAE,CAAC,QAAQ,EAAEU,SAAS,CAAC;EACrC,IAAIG,IAAI,GAAGR,iBAAiB,CAACG,aAAa,EAAEC,KAAK,CAAC;EAElD,IAAIK,mBAAmB,GAAGP,kBAAkB,CAACM,IAAI,EAAE;MACjDE,SAAS,EAAET;IACb,CAAC,CAAC;IACEU,UAAU,GAAGF,mBAAmB,CAAC,CAAC,CAAC;IACnCG,SAAS,GAAGH,mBAAmB,CAAC,CAAC,CAAC;EAEtC,IAAII,WAAW,GAAGd,cAAc,CAACI,aAAa,EAAEC,KAAK,CAAC;EACtD,OAAO,aAAaP,KAAK,CAACiB,aAAa,CAACD,WAAW,EAAEnB,QAAQ,CAAC,CAAC,CAAC,EAAEkB,SAAS,EAAE;IAC3EP,SAAS,EAAEE;EACb,CAAC,CAAC,EAAET,eAAe,CAACQ,GAAG,EAAE;IACvBS,eAAe,EAAE,KAAK;IACtBC,YAAY,EAAEL;EAChB,CAAC,CAAC,CAAC;AACL;AAEAR,aAAa,CAACc,YAAY,GAAG,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC;AACvDd,aAAa,CAACe,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAChE;EACAC,EAAE,EAAE1B,SAAS,CAAC2B,WAAW;EAEzB;EACAlB,SAAS,EAAET,SAAS,CAAC4B,MAAM;EAE3B;EACAlB,GAAG,EAAEV,SAAS,CAAC4B;AACjB,CAAC,GAAG,CAAC,CAAC;AACN,eAAerB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}