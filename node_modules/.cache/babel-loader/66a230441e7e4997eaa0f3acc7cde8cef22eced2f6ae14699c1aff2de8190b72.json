{"ast":null,"code":"import _asyncToGenerator from\"/home/runner/work/jeopardy/jeopardy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/home/runner/work/jeopardy/jeopardy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/runner/work/jeopardy/jeopardy/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/runner/work/jeopardy/jeopardy/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/runner/work/jeopardy/jeopardy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _regeneratorRuntime from\"/home/runner/work/jeopardy/jeopardy/node_modules/@babel/runtime/regenerator/index.js\";import'./App.css';import React from'react';import{Divider,Grid,Icon,Input}from'semantic-ui-react';//@ts-ignore\nimport io from'socket.io-client';import{serverPath,generateName}from'../../utils';import{Chat}from'../Chat/Chat';import{JeopardyTopBar}from'../TopBar/TopBar';import{Jeopardy}from'../../Jeopardy';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={state:'starting',participants:[],rosterUpdateTS:Number(new Date()),chat:[],nameMap:{},pictureMap:{},myName:'',myPicture:'',scrollTimestamp:0,error:''};_this.socket=null;_this.init=function(){// Load room ID from url\nvar roomId='/default';var query=window.location.hash.substring(1);if(query){roomId='/'+query;}_this.join(roomId);};_this.join=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(roomId){var socket;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:socket=io(serverPath+roomId);_this.socket=socket;socket.on('connect',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var userName,savedId;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.setState({state:'connected'});// Load username from localstorage\nuserName=window.localStorage.getItem('watchparty-username');_context.t0=_this;_context.t1=userName;if(_context.t1){_context.next=8;break;}_context.next=7;return generateName();case 7:_context.t1=_context.sent;case 8:_context.t2=_context.t1;_context.t3={value:_context.t2};_context.t0.updateName.call(_context.t0,null,_context.t3);savedId=window.localStorage.getItem('jeopardy-savedId');if(savedId){socket.emit('JPD:reconnect',savedId);}// Save our current ID to localstorage\nwindow.localStorage.setItem('jeopardy-savedId',socket.id);case 14:case\"end\":return _context.stop();}}},_callee);})));socket.on('REC:chat',function(data){if(document.visibilityState&&document.visibilityState!=='visible'){new Audio('/clearly.mp3').play();}_this.state.chat.push(data);_this.setState({chat:_this.state.chat,scrollTimestamp:Number(new Date())});});socket.on('REC:nameMap',function(data){_this.setState({nameMap:data});});socket.on('REC:pictureMap',function(data){_this.setState({pictureMap:data});});socket.on('roster',function(data){_this.setState({participants:data,rosterUpdateTS:Number(new Date())});});socket.on('chatinit',function(data){_this.setState({chat:data,scrollTimestamp:Number(new Date())});});case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref.apply(this,arguments);};}();_this.updateName=function(e,data){_this.setState({myName:data.value});_this.socket.emit('CMD:name',data.value);window.localStorage.setItem('watchparty-username',data.value);};_this.updatePicture=function(url){_this.setState({myPicture:url});_this.socket.emit('CMD:picture',url);};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:// Send heartbeat to the server\nwindow.setInterval(function(){window.fetch(serverPath+'/ping');},10*60*1000);this.init();case 2:case\"end\":return _context3.stop();}}},_callee3,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(JeopardyTopBar,{}),/*#__PURE__*/_jsx(Grid,{stackable:true,celled:\"internally\",children:/*#__PURE__*/_jsxs(Grid.Row,{children:[/*#__PURE__*/_jsx(Grid.Column,{width:12,children:this.state.state==='connected'&&/*#__PURE__*/_jsx(Jeopardy,{socket:this.socket,participants:this.state.participants,nameMap:this.state.nameMap,pictureMap:this.state.pictureMap})}),/*#__PURE__*/_jsxs(Grid.Column,{width:4,style:{display:'flex',flexDirection:'column'},className:\"fullHeightColumn\",children:[/*#__PURE__*/_jsx(Input,{inverted:true,fluid:true,label:'My name is:',value:this.state.myName,onChange:this.updateName,icon:/*#__PURE__*/_jsx(Icon,{onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.t0=_this2;_context4.next=3;return generateName();case 3:_context4.t1=_context4.sent;_context4.t2={value:_context4.t1};return _context4.abrupt(\"return\",_context4.t0.updateName.call(_context4.t0,null,_context4.t2));case 6:case\"end\":return _context4.stop();}}},_callee4);})),name:\"random\",inverted:true,circular:true,link:true})}),/*#__PURE__*/_jsx(Divider,{inverted:true,horizontal:true}),/*#__PURE__*/_jsx(Chat,{chat:this.state.chat,nameMap:this.state.nameMap,pictureMap:this.state.pictureMap,socket:this.socket,scrollTimestamp:this.state.scrollTimestamp,getMediaDisplayName:function getMediaDisplayName(){return'';}})]})]})})]});}}]);return App;}(React.Component);export{App as default};","map":{"version":3,"names":["React","Divider","Grid","Icon","Input","io","serverPath","generateName","Chat","JeopardyTopBar","Jeopardy","App","state","participants","rosterUpdateTS","Number","Date","chat","nameMap","pictureMap","myName","myPicture","scrollTimestamp","error","socket","init","roomId","query","window","location","hash","substring","join","on","setState","userName","localStorage","getItem","value","updateName","savedId","emit","setItem","id","data","document","visibilityState","Audio","play","push","e","updatePicture","url","setInterval","fetch","display","flexDirection","Component"],"sources":["/home/runner/work/jeopardy/jeopardy/src/components/App/App.tsx"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport { Divider, Grid, Icon, Input } from 'semantic-ui-react';\n//@ts-ignore\nimport io from 'socket.io-client';\nimport { serverPath, generateName } from '../../utils';\nimport { Chat } from '../Chat/Chat';\nimport { JeopardyTopBar } from '../TopBar/TopBar';\nimport { Jeopardy } from '../../Jeopardy';\n\ninterface AppState {\n  state: 'init' | 'starting' | 'connected';\n  participants: User[];\n  rosterUpdateTS: Number;\n  chat: ChatMessage[];\n  nameMap: StringDict;\n  pictureMap: StringDict;\n  myName: string;\n  myPicture: string;\n  scrollTimestamp: number;\n  error: string;\n}\n\nexport default class App extends React.Component<null, AppState> {\n  state: AppState = {\n    state: 'starting',\n    participants: [],\n    rosterUpdateTS: Number(new Date()),\n    chat: [],\n    nameMap: {},\n    pictureMap: {},\n    myName: '',\n    myPicture: '',\n    scrollTimestamp: 0,\n    error: '',\n  };\n  socket: any = null;\n\n  async componentDidMount() {\n    // Send heartbeat to the server\n    window.setInterval(() => {\n      window.fetch(serverPath + '/ping');\n    }, 10 * 60 * 1000);\n\n    this.init();\n  }\n\n  init = () => {\n    // Load room ID from url\n    let roomId = '/default';\n    let query = window.location.hash.substring(1);\n    if (query) {\n      roomId = '/' + query;\n    }\n    this.join(roomId);\n  };\n\n  join = async (roomId: string) => {\n    const socket = io(serverPath + roomId);\n    this.socket = socket;\n    socket.on('connect', async () => {\n      this.setState({ state: 'connected' });\n      // Load username from localstorage\n      let userName = window.localStorage.getItem('watchparty-username');\n      this.updateName(null, { value: userName || (await generateName()) });\n      const savedId = window.localStorage.getItem('jeopardy-savedId');\n      if (savedId) {\n        socket.emit('JPD:reconnect', savedId);\n      }\n      // Save our current ID to localstorage\n      window.localStorage.setItem('jeopardy-savedId', socket.id);\n    });\n    socket.on('REC:chat', (data: ChatMessage) => {\n      if (document.visibilityState && document.visibilityState !== 'visible') {\n        new Audio('/clearly.mp3').play();\n      }\n      this.state.chat.push(data);\n      this.setState({\n        chat: this.state.chat,\n        scrollTimestamp: Number(new Date()),\n      });\n    });\n    socket.on('REC:nameMap', (data: StringDict) => {\n      this.setState({ nameMap: data });\n    });\n    socket.on('REC:pictureMap', (data: StringDict) => {\n      this.setState({ pictureMap: data });\n    });\n    socket.on('roster', (data: User[]) => {\n      this.setState({ participants: data, rosterUpdateTS: Number(new Date()) });\n    });\n    socket.on('chatinit', (data: any) => {\n      this.setState({ chat: data, scrollTimestamp: Number(new Date()) });\n    });\n  };\n\n  updateName = (e: any, data: { value: string }) => {\n    this.setState({ myName: data.value });\n    this.socket.emit('CMD:name', data.value);\n    window.localStorage.setItem('watchparty-username', data.value);\n  };\n\n  updatePicture = (url: string) => {\n    this.setState({ myPicture: url });\n    this.socket.emit('CMD:picture', url);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <JeopardyTopBar />\n        {\n          <Grid stackable celled=\"internally\">\n            <Grid.Row>\n              <Grid.Column width={12}>\n                {this.state.state === 'connected' && (\n                  <Jeopardy\n                    socket={this.socket}\n                    participants={this.state.participants}\n                    nameMap={this.state.nameMap}\n                    pictureMap={this.state.pictureMap}\n                  />\n                )}\n              </Grid.Column>\n              <Grid.Column\n                width={4}\n                style={{ display: 'flex', flexDirection: 'column' }}\n                className=\"fullHeightColumn\"\n              >\n                <Input\n                  inverted\n                  fluid\n                  label={'My name is:'}\n                  value={this.state.myName}\n                  onChange={this.updateName}\n                  icon={\n                    <Icon\n                      onClick={async () =>\n                        this.updateName(null, { value: await generateName() })\n                      }\n                      name=\"random\"\n                      inverted\n                      circular\n                      link\n                    />\n                  }\n                />\n                <Divider inverted horizontal></Divider>\n                <Chat\n                  chat={this.state.chat}\n                  nameMap={this.state.nameMap}\n                  pictureMap={this.state.pictureMap}\n                  socket={this.socket}\n                  scrollTimestamp={this.state.scrollTimestamp}\n                  getMediaDisplayName={() => ''}\n                />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        }\n      </React.Fragment>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}