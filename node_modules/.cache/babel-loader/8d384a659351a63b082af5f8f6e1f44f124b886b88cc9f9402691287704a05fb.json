{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n    children = props.children,\n    className = props.className,\n    color = props.color,\n    columns = props.columns,\n    divided = props.divided,\n    only = props.only,\n    reversed = props.reversed,\n    stretched = props.stretched,\n    textAlign = props.textAlign,\n    verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal'])),\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","map":{"version":3,"names":["_extends","cx","PropTypes","React","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","useMultipleProp","useTextAlignProp","useVerticalAlignProp","useWidthProp","GridRow","props","centered","children","className","color","columns","divided","only","reversed","stretched","textAlign","verticalAlign","classes","rest","ElementType","createElement","handledProps","propTypes","process","env","NODE_ENV","as","elementType","bool","node","string","oneOf","COLORS","concat","WIDTHS","multipleProp","VISIBILITY","TEXT_ALIGNMENTS","VERTICAL_ALIGNMENTS"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,EAAE,MAAM,MAAM;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,GAAG,EAAEC,UAAU,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,oBAAoB,EAAEC,YAAY,QAAQ,WAAW;AACtK;AACA;AACA;;AAEA,SAASC,OAAO,CAACC,KAAK,EAAE;EACtB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;IACzBC,SAAS,GAAGH,KAAK,CAACG,SAAS;IAC3BC,KAAK,GAAGJ,KAAK,CAACI,KAAK;IACnBC,OAAO,GAAGL,KAAK,CAACK,OAAO;IACvBC,OAAO,GAAGN,KAAK,CAACM,OAAO;IACvBC,IAAI,GAAGP,KAAK,CAACO,IAAI;IACjBC,QAAQ,GAAGR,KAAK,CAACQ,QAAQ;IACzBC,SAAS,GAAGT,KAAK,CAACS,SAAS;IAC3BC,SAAS,GAAGV,KAAK,CAACU,SAAS;IAC3BC,aAAa,GAAGX,KAAK,CAACW,aAAa;EACvC,IAAIC,OAAO,GAAGzB,EAAE,CAACiB,KAAK,EAAEV,UAAU,CAACO,QAAQ,EAAE,UAAU,CAAC,EAAEP,UAAU,CAACY,OAAO,EAAE,SAAS,CAAC,EAAEZ,UAAU,CAACe,SAAS,EAAE,WAAW,CAAC,EAAEd,eAAe,CAACY,IAAI,EAAE,MAAM,CAAC,EAAEZ,eAAe,CAACa,QAAQ,EAAE,UAAU,CAAC,EAAEZ,gBAAgB,CAACc,SAAS,CAAC,EAAEb,oBAAoB,CAACc,aAAa,CAAC,EAAEb,YAAY,CAACO,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,KAAK,EAAEF,SAAS,CAAC;EAC9T,IAAIU,IAAI,GAAGrB,iBAAiB,CAACO,OAAO,EAAEC,KAAK,CAAC;EAC5C,IAAIc,WAAW,GAAGvB,cAAc,CAACQ,OAAO,EAAEC,KAAK,CAAC;EAChD,OAAO,aAAaX,KAAK,CAAC0B,aAAa,CAACD,WAAW,EAAE5B,QAAQ,CAAC,CAAC,CAAC,EAAE2B,IAAI,EAAE;IACtEV,SAAS,EAAES;EACb,CAAC,CAAC,EAAEV,QAAQ,CAAC;AACf;AAEAH,OAAO,CAACiB,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,eAAe,CAAC;AAChKjB,OAAO,CAACkB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC1D;EACAC,EAAE,EAAEjC,SAAS,CAACkC,WAAW;EAEzB;EACArB,QAAQ,EAAEb,SAAS,CAACmC,IAAI;EAExB;EACArB,QAAQ,EAAEd,SAAS,CAACoC,IAAI;EAExB;EACArB,SAAS,EAAEf,SAAS,CAACqC,MAAM;EAE3B;EACArB,KAAK,EAAEhB,SAAS,CAACsC,KAAK,CAACjC,GAAG,CAACkC,MAAM,CAAC;EAElC;EACAtB,OAAO,EAAEjB,SAAS,CAACsC,KAAK,CAAC,EAAE,CAACE,MAAM,CAACnC,GAAG,CAACoC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;EAE1D;EACAvB,OAAO,EAAElB,SAAS,CAACmC,IAAI;EAEvB;EACAhB,IAAI,EAAEjB,eAAe,CAACwC,YAAY,CAACrC,GAAG,CAACsC,UAAU,CAAC;EAElD;EACAvB,QAAQ,EAAElB,eAAe,CAACwC,YAAY,CAAC,CAAC,UAAU,EAAE,qBAAqB,EAAE,QAAQ,EAAE,mBAAmB,EAAE,QAAQ,EAAE,mBAAmB,CAAC,CAAC;EAEzI;EACArB,SAAS,EAAErB,SAAS,CAACmC,IAAI;EAEzB;EACAb,SAAS,EAAEtB,SAAS,CAACsC,KAAK,CAACjC,GAAG,CAACuC,eAAe,CAAC;EAE/C;EACArB,aAAa,EAAEvB,SAAS,CAACsC,KAAK,CAACjC,GAAG,CAACwC,mBAAmB;AACxD,CAAC,GAAG,CAAC,CAAC;AACN,eAAelC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}