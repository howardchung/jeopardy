{"ast":null,"code":"import _difference from \"lodash-es/difference\";\nimport _trim from \"lodash-es/trim\";\nimport _isObject from \"lodash-es/isObject\";\nimport _pick from \"lodash-es/pick\";\nimport _keys from \"lodash-es/keys\";\nimport _isPlainObject from \"lodash-es/isPlainObject\";\nimport _isNil from \"lodash-es/isNil\";\nimport _min from \"lodash-es/min\";\nimport _sum from \"lodash-es/sum\";\nimport _map from \"lodash-es/map\";\nimport _sortBy from \"lodash-es/sortBy\";\nimport _take from \"lodash-es/take\";\nimport _memoize from \"lodash-es/memoize\";\nimport PropTypes from 'prop-types';\nimport leven from './leven';\nvar typeOf = function typeOf() {\n  var _Object$prototype$toS;\n  return (_Object$prototype$toS = Object.prototype.toString).call.apply(_Object$prototype$toS, arguments);\n};\n/**\n * Ensure a prop is a valid DOM node.\n */\n\nexport var domNode = function domNode(props, propName) {\n  // skip if prop is undefined\n  if (props[propName] === undefined) return; // short circle for SSR env\n\n  if (typeof Element === 'undefined') return; // skip if prop is valid\n\n  if (props[propName] instanceof Element) return;\n  return new Error(\"Invalid prop \\\"\" + propName + \"\\\" supplied, expected a DOM node.\");\n};\n/**\n * Similar to PropTypes.oneOf but shows closest matches.\n * Word order is ignored allowing `left chevron` to match `chevron left`.\n * Useful for very large lists of options (e.g. Icon name, Flag name, etc.)\n * @param {string[]} suggestions An array of allowed values.\n */\n\nexport var suggest = function suggest(suggestions) {\n  if (!Array.isArray(suggestions)) {\n    throw new Error('Invalid argument supplied to suggest, expected an instance of array.');\n  }\n  /* eslint-disable max-nested-callbacks */\n\n  var findBestSuggestions = _memoize(function (str) {\n    var propValueWords = str.split(' ');\n    return _take(_sortBy(_map(suggestions, function (suggestion) {\n      var suggestionWords = suggestion.split(' ');\n      var propValueScore = _sum(_map(_map(propValueWords, function (x) {\n        return _map(suggestionWords, function (y) {\n          return leven(x, y);\n        });\n      }), _min));\n      var suggestionScore = _sum(_map(_map(suggestionWords, function (x) {\n        return _map(propValueWords, function (y) {\n          return leven(x, y);\n        });\n      }), _min));\n      return {\n        suggestion: suggestion,\n        score: propValueScore + suggestionScore\n      };\n    }), ['score', 'suggestion']), 3);\n  });\n  /* eslint-enable max-nested-callbacks */\n  // Convert the suggestions list into a hash map for O(n) lookup times. Ensure\n  // the words in each key are sorted alphabetically so that we have a consistent\n  // way of looking up a value in the map, i.e. we can sort the words in the\n  // incoming propValue and look that up without having to check all permutations.\n\n  var suggestionsLookup = suggestions.reduce(function (acc, key) {\n    acc[key.split(' ').sort().join(' ')] = true;\n    return acc;\n  }, {});\n  return function (props, propName, componentName) {\n    var propValue = props[propName]; // skip if prop is undefined or is included in the suggestions\n\n    if (!propValue || suggestionsLookup[propValue]) return; // check if the words were correct but ordered differently.\n    // Since we're matching for classNames we need to allow any word order\n    // to pass validation, e.g. `left chevron` vs `chevron left`.\n\n    var propValueSorted = propValue.split(' ').sort().join(' ');\n    if (suggestionsLookup[propValueSorted]) return; // find best suggestions\n\n    var bestMatches = findBestSuggestions(propValue); // skip if a match scored 0\n\n    if (bestMatches.some(function (x) {\n      return x.score === 0;\n    })) return;\n    return new Error([\"Invalid prop `\" + propName + \"` of value `\" + propValue + \"` supplied to `\" + componentName + \"`.\", \"\\n\\nInstead of `\" + propValue + \"`, did you mean:\", bestMatches.map(function (x) {\n      return \"\\n  - \" + x.suggestion;\n    }).join(''), '\\n'].join(''));\n  };\n};\n/**\n * Disallow other props from being defined with this prop.\n * @param {string[]} disallowedProps An array of props that cannot be used with this prop.\n */\n\nexport var disallow = function disallow(disallowedProps) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(disallowedProps)) {\n      throw new Error(['Invalid argument supplied to disallow, expected an instance of array.', \" See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(''));\n    } // skip if prop is undefined\n\n    if (_isNil(props[propName]) || props[propName] === false) {\n      return;\n    } // find disallowed props with values\n\n    var disallowed = disallowedProps.reduce(function (acc, disallowedProp) {\n      if (!_isNil(props[disallowedProp]) && props[disallowedProp] !== false) {\n        return [].concat(acc, [disallowedProp]);\n      }\n      return acc;\n    }, []);\n    if (disallowed.length > 0) {\n      return new Error([\"Prop `\" + propName + \"` in `\" + componentName + \"` conflicts with props: `\" + disallowed.join('`, `') + \"`.\", 'They cannot be defined together, choose one or the other.'].join(' '));\n    }\n  };\n};\n/**\n * Ensure a prop adherers to multiple prop type validators.\n * @param {function[]} validators An array of propType functions.\n */\n\nexport var every = function every(validators) {\n  return function (props, propName, componentName) {\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n    if (!Array.isArray(validators)) {\n      throw new Error(['Invalid argument supplied to every, expected an instance of array.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n    var errors = [];\n    validators.forEach(function (validator) {\n      if (typeof validator !== 'function') {\n        throw new Error(\"every() argument \\\"validators\\\" should contain functions, found: \" + typeOf(validator) + \".\");\n      }\n      var error = validator.apply(void 0, [props, propName, componentName].concat(rest));\n      if (error) {\n        errors.push(error);\n      }\n    }); // we can only return one error at a time\n\n    return errors[0];\n  };\n};\n/**\n * Ensure a validator passes only when a component has a given propsShape.\n * @param {object} propsShape An object describing the prop shape.\n * @param {function} validator A propType function.\n */\n\nexport var givenProps = function givenProps(propsShape, validator) {\n  return function (props, propName, componentName) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      rest[_key2 - 3] = arguments[_key2];\n    }\n    if (!_isPlainObject(propsShape)) {\n      throw new Error(['Invalid argument supplied to givenProps, expected an object.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n    if (typeof validator !== 'function') {\n      throw new Error(['Invalid argument supplied to givenProps, expected a function.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n    var shouldValidate = _keys(propsShape).every(function (key) {\n      var val = propsShape[key]; // require propShape validators to pass or prop values to match\n\n      return typeof val === 'function' ? !val.apply(void 0, [props, key, componentName].concat(rest)) : val === props[propName];\n    });\n    if (!shouldValidate) return;\n    var error = validator.apply(void 0, [props, propName, componentName].concat(rest));\n    if (error) {\n      // poor mans shallow pretty print, prevents JSON circular reference errors\n      var prettyProps = \"{ \" + _keys(_pick(_keys(propsShape), props)).map(function (key) {\n        var val = props[key];\n        var renderedValue = val;\n        if (typeof val === 'string') renderedValue = \"\\\"\" + val + \"\\\"\";else if (Array.isArray(val)) renderedValue = \"[\" + val.join(', ') + \"]\";else if (_isObject(val)) renderedValue = '{...}';\n        return key + \": \" + renderedValue;\n      }).join(', ') + \" }\";\n      error.message = \"Given props \" + prettyProps + \": \" + error.message;\n      return error;\n    }\n  };\n};\n/**\n * Define prop dependencies by requiring other props.\n * @param {string[]} requiredProps An array of required prop names.\n */\n\nexport var demand = function demand(requiredProps) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(requiredProps)) {\n      throw new Error(['Invalid `requiredProps` argument supplied to require, expected an instance of array.', \" See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(''));\n    } // skip if prop is undefined\n\n    if (props[propName] === undefined) return;\n    var missingRequired = requiredProps.filter(function (requiredProp) {\n      return props[requiredProp] === undefined;\n    });\n    if (missingRequired.length > 0) {\n      return new Error(\"`\" + propName + \"` prop in `\" + componentName + \"` requires props: `\" + missingRequired.join('`, `') + \"`.\");\n    }\n  };\n};\n/**\n * Ensure an multiple prop contains a string with only possible values.\n * @param {string[]} possible An array of possible values to prop.\n */\n\nexport var multipleProp = function multipleProp(possible) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(possible)) {\n      throw new Error(['Invalid argument supplied to some, expected an instance of array.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n    var propValue = props[propName]; // skip if prop is undefined\n\n    if (_isNil(propValue) || propValue === false) return;\n    var values = propValue.replace('large screen', 'large-screen').replace(/ vertically/g, '-vertically').split(' ').map(function (val) {\n      return _trim(val).replace('-', ' ');\n    });\n    var invalid = _difference(values, possible); // fail only if there are invalid values\n\n    if (invalid.length > 0) {\n      return new Error(\"`\" + propName + \"` prop in `\" + componentName + \"` has invalid values: `\" + invalid.join('`, `') + \"`.\");\n    }\n  };\n};\n/**\n * Ensure a component can render as a node passed as a prop value in place of children.\n */\n\nexport var contentShorthand = function contentShorthand() {\n  return every([disallow(['children']), PropTypes.node]).apply(void 0, arguments);\n};\n/**\n * Item shorthand is a description of a component that can be a literal,\n * a props object, or an element.\n */\n\nexport var itemShorthand = function itemShorthand() {\n  return every([disallow(['children']), PropTypes.oneOfType([PropTypes.func, PropTypes.node, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.node, PropTypes.object]))])]).apply(void 0, arguments);\n};\n/**\n * Collection shorthand ensures a prop is an array of item shorthand.\n */\n\nexport var collectionShorthand = function collectionShorthand() {\n  return every([disallow(['children']), PropTypes.arrayOf(itemShorthand)]).apply(void 0, arguments);\n};\n/**\n * Show a deprecated warning for component props with a help message and optional validator.\n * @param {string} help A help message to display with the deprecation warning.\n * @param {function} [validator] A propType function.\n */\n\nexport var deprecate = function deprecate(help, validator) {\n  return function (props, propName, componentName) {\n    if (typeof help !== 'string') {\n      throw new Error(['Invalid `help` argument supplied to deprecate, expected a string.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    } // skip if prop is undefined\n\n    if (props[propName] === undefined) return; // deprecation error and help\n\n    var error = new Error(\"The `\" + propName + \"` prop in `\" + componentName + \"` is deprecated.\");\n    if (help) error.message += \" \" + help; // add optional validation error message\n\n    if (validator) {\n      if (typeof validator === 'function') {\n        for (var _len3 = arguments.length, args = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n          args[_key3 - 3] = arguments[_key3];\n        }\n        var validationError = validator.apply(void 0, [props, propName, componentName].concat(args));\n        if (validationError) {\n          error.message = error.message + \" \" + validationError.message;\n        }\n      } else {\n        throw new Error(['Invalid argument supplied to deprecate, expected a function.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n      }\n    }\n    return error;\n  };\n};\n/** A checker that matches the React.RefObject type. */\n\nexport var refObject = PropTypes.shape({\n  current: PropTypes.object\n});\n/** A checker that matches the React.Ref type. */\n\nexport var ref = PropTypes.oneOfType([PropTypes.func, refObject]);","map":{"version":3,"names":["_difference","_trim","_isObject","_pick","_keys","_isPlainObject","_isNil","_min","_sum","_map","_sortBy","_take","_memoize","PropTypes","leven","typeOf","_Object$prototype$toS","Object","prototype","toString","call","apply","arguments","domNode","props","propName","undefined","Element","Error","suggest","suggestions","Array","isArray","findBestSuggestions","str","propValueWords","split","suggestion","suggestionWords","propValueScore","x","y","suggestionScore","score","suggestionsLookup","reduce","acc","key","sort","join","componentName","propValue","propValueSorted","bestMatches","some","map","disallow","disallowedProps","disallowed","disallowedProp","concat","length","every","validators","_len","rest","_key","errors","forEach","validator","error","push","givenProps","propsShape","_len2","_key2","shouldValidate","val","prettyProps","renderedValue","message","demand","requiredProps","missingRequired","filter","requiredProp","multipleProp","possible","values","replace","invalid","contentShorthand","node","itemShorthand","oneOfType","func","object","arrayOf","collectionShorthand","deprecate","help","_len3","args","_key3","validationError","refObject","shape","current","ref"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/lib/customPropTypes.js"],"sourcesContent":["import _difference from \"lodash-es/difference\";\nimport _trim from \"lodash-es/trim\";\nimport _isObject from \"lodash-es/isObject\";\nimport _pick from \"lodash-es/pick\";\nimport _keys from \"lodash-es/keys\";\nimport _isPlainObject from \"lodash-es/isPlainObject\";\nimport _isNil from \"lodash-es/isNil\";\nimport _min from \"lodash-es/min\";\nimport _sum from \"lodash-es/sum\";\nimport _map from \"lodash-es/map\";\nimport _sortBy from \"lodash-es/sortBy\";\nimport _take from \"lodash-es/take\";\nimport _memoize from \"lodash-es/memoize\";\nimport PropTypes from 'prop-types';\nimport leven from './leven';\n\nvar typeOf = function typeOf() {\n  var _Object$prototype$toS;\n\n  return (_Object$prototype$toS = Object.prototype.toString).call.apply(_Object$prototype$toS, arguments);\n};\n/**\n * Ensure a prop is a valid DOM node.\n */\n\n\nexport var domNode = function domNode(props, propName) {\n  // skip if prop is undefined\n  if (props[propName] === undefined) return; // short circle for SSR env\n\n  if (typeof Element === 'undefined') return; // skip if prop is valid\n\n  if (props[propName] instanceof Element) return;\n  return new Error(\"Invalid prop \\\"\" + propName + \"\\\" supplied, expected a DOM node.\");\n};\n/**\n * Similar to PropTypes.oneOf but shows closest matches.\n * Word order is ignored allowing `left chevron` to match `chevron left`.\n * Useful for very large lists of options (e.g. Icon name, Flag name, etc.)\n * @param {string[]} suggestions An array of allowed values.\n */\n\nexport var suggest = function suggest(suggestions) {\n  if (!Array.isArray(suggestions)) {\n    throw new Error('Invalid argument supplied to suggest, expected an instance of array.');\n  }\n  /* eslint-disable max-nested-callbacks */\n\n\n  var findBestSuggestions = _memoize(function (str) {\n    var propValueWords = str.split(' ');\n    return _take(_sortBy(_map(suggestions, function (suggestion) {\n      var suggestionWords = suggestion.split(' ');\n\n      var propValueScore = _sum(_map(_map(propValueWords, function (x) {\n        return _map(suggestionWords, function (y) {\n          return leven(x, y);\n        });\n      }), _min));\n\n      var suggestionScore = _sum(_map(_map(suggestionWords, function (x) {\n        return _map(propValueWords, function (y) {\n          return leven(x, y);\n        });\n      }), _min));\n\n      return {\n        suggestion: suggestion,\n        score: propValueScore + suggestionScore\n      };\n    }), ['score', 'suggestion']), 3);\n  });\n  /* eslint-enable max-nested-callbacks */\n  // Convert the suggestions list into a hash map for O(n) lookup times. Ensure\n  // the words in each key are sorted alphabetically so that we have a consistent\n  // way of looking up a value in the map, i.e. we can sort the words in the\n  // incoming propValue and look that up without having to check all permutations.\n\n\n  var suggestionsLookup = suggestions.reduce(function (acc, key) {\n    acc[key.split(' ').sort().join(' ')] = true;\n    return acc;\n  }, {});\n  return function (props, propName, componentName) {\n    var propValue = props[propName]; // skip if prop is undefined or is included in the suggestions\n\n    if (!propValue || suggestionsLookup[propValue]) return; // check if the words were correct but ordered differently.\n    // Since we're matching for classNames we need to allow any word order\n    // to pass validation, e.g. `left chevron` vs `chevron left`.\n\n    var propValueSorted = propValue.split(' ').sort().join(' ');\n    if (suggestionsLookup[propValueSorted]) return; // find best suggestions\n\n    var bestMatches = findBestSuggestions(propValue); // skip if a match scored 0\n\n    if (bestMatches.some(function (x) {\n      return x.score === 0;\n    })) return;\n    return new Error([\"Invalid prop `\" + propName + \"` of value `\" + propValue + \"` supplied to `\" + componentName + \"`.\", \"\\n\\nInstead of `\" + propValue + \"`, did you mean:\", bestMatches.map(function (x) {\n      return \"\\n  - \" + x.suggestion;\n    }).join(''), '\\n'].join(''));\n  };\n};\n/**\n * Disallow other props from being defined with this prop.\n * @param {string[]} disallowedProps An array of props that cannot be used with this prop.\n */\n\nexport var disallow = function disallow(disallowedProps) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(disallowedProps)) {\n      throw new Error(['Invalid argument supplied to disallow, expected an instance of array.', \" See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(''));\n    } // skip if prop is undefined\n\n\n    if (_isNil(props[propName]) || props[propName] === false) {\n      return;\n    } // find disallowed props with values\n\n\n    var disallowed = disallowedProps.reduce(function (acc, disallowedProp) {\n      if (!_isNil(props[disallowedProp]) && props[disallowedProp] !== false) {\n        return [].concat(acc, [disallowedProp]);\n      }\n\n      return acc;\n    }, []);\n\n    if (disallowed.length > 0) {\n      return new Error([\"Prop `\" + propName + \"` in `\" + componentName + \"` conflicts with props: `\" + disallowed.join('`, `') + \"`.\", 'They cannot be defined together, choose one or the other.'].join(' '));\n    }\n  };\n};\n/**\n * Ensure a prop adherers to multiple prop type validators.\n * @param {function[]} validators An array of propType functions.\n */\n\nexport var every = function every(validators) {\n  return function (props, propName, componentName) {\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    if (!Array.isArray(validators)) {\n      throw new Error(['Invalid argument supplied to every, expected an instance of array.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    var errors = [];\n    validators.forEach(function (validator) {\n      if (typeof validator !== 'function') {\n        throw new Error(\"every() argument \\\"validators\\\" should contain functions, found: \" + typeOf(validator) + \".\");\n      }\n\n      var error = validator.apply(void 0, [props, propName, componentName].concat(rest));\n\n      if (error) {\n        errors.push(error);\n      }\n    }); // we can only return one error at a time\n\n    return errors[0];\n  };\n};\n/**\n * Ensure a validator passes only when a component has a given propsShape.\n * @param {object} propsShape An object describing the prop shape.\n * @param {function} validator A propType function.\n */\n\nexport var givenProps = function givenProps(propsShape, validator) {\n  return function (props, propName, componentName) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      rest[_key2 - 3] = arguments[_key2];\n    }\n\n    if (!_isPlainObject(propsShape)) {\n      throw new Error(['Invalid argument supplied to givenProps, expected an object.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    if (typeof validator !== 'function') {\n      throw new Error(['Invalid argument supplied to givenProps, expected a function.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    var shouldValidate = _keys(propsShape).every(function (key) {\n      var val = propsShape[key]; // require propShape validators to pass or prop values to match\n\n      return typeof val === 'function' ? !val.apply(void 0, [props, key, componentName].concat(rest)) : val === props[propName];\n    });\n\n    if (!shouldValidate) return;\n    var error = validator.apply(void 0, [props, propName, componentName].concat(rest));\n\n    if (error) {\n      // poor mans shallow pretty print, prevents JSON circular reference errors\n      var prettyProps = \"{ \" + _keys(_pick(_keys(propsShape), props)).map(function (key) {\n        var val = props[key];\n        var renderedValue = val;\n        if (typeof val === 'string') renderedValue = \"\\\"\" + val + \"\\\"\";else if (Array.isArray(val)) renderedValue = \"[\" + val.join(', ') + \"]\";else if (_isObject(val)) renderedValue = '{...}';\n        return key + \": \" + renderedValue;\n      }).join(', ') + \" }\";\n      error.message = \"Given props \" + prettyProps + \": \" + error.message;\n      return error;\n    }\n  };\n};\n/**\n * Define prop dependencies by requiring other props.\n * @param {string[]} requiredProps An array of required prop names.\n */\n\nexport var demand = function demand(requiredProps) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(requiredProps)) {\n      throw new Error(['Invalid `requiredProps` argument supplied to require, expected an instance of array.', \" See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(''));\n    } // skip if prop is undefined\n\n\n    if (props[propName] === undefined) return;\n    var missingRequired = requiredProps.filter(function (requiredProp) {\n      return props[requiredProp] === undefined;\n    });\n\n    if (missingRequired.length > 0) {\n      return new Error(\"`\" + propName + \"` prop in `\" + componentName + \"` requires props: `\" + missingRequired.join('`, `') + \"`.\");\n    }\n  };\n};\n/**\n * Ensure an multiple prop contains a string with only possible values.\n * @param {string[]} possible An array of possible values to prop.\n */\n\nexport var multipleProp = function multipleProp(possible) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(possible)) {\n      throw new Error(['Invalid argument supplied to some, expected an instance of array.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    }\n\n    var propValue = props[propName]; // skip if prop is undefined\n\n    if (_isNil(propValue) || propValue === false) return;\n    var values = propValue.replace('large screen', 'large-screen').replace(/ vertically/g, '-vertically').split(' ').map(function (val) {\n      return _trim(val).replace('-', ' ');\n    });\n\n    var invalid = _difference(values, possible); // fail only if there are invalid values\n\n\n    if (invalid.length > 0) {\n      return new Error(\"`\" + propName + \"` prop in `\" + componentName + \"` has invalid values: `\" + invalid.join('`, `') + \"`.\");\n    }\n  };\n};\n/**\n * Ensure a component can render as a node passed as a prop value in place of children.\n */\n\nexport var contentShorthand = function contentShorthand() {\n  return every([disallow(['children']), PropTypes.node]).apply(void 0, arguments);\n};\n/**\n * Item shorthand is a description of a component that can be a literal,\n * a props object, or an element.\n */\n\nexport var itemShorthand = function itemShorthand() {\n  return every([disallow(['children']), PropTypes.oneOfType([PropTypes.func, PropTypes.node, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.node, PropTypes.object]))])]).apply(void 0, arguments);\n};\n/**\n * Collection shorthand ensures a prop is an array of item shorthand.\n */\n\nexport var collectionShorthand = function collectionShorthand() {\n  return every([disallow(['children']), PropTypes.arrayOf(itemShorthand)]).apply(void 0, arguments);\n};\n/**\n * Show a deprecated warning for component props with a help message and optional validator.\n * @param {string} help A help message to display with the deprecation warning.\n * @param {function} [validator] A propType function.\n */\n\nexport var deprecate = function deprecate(help, validator) {\n  return function (props, propName, componentName) {\n    if (typeof help !== 'string') {\n      throw new Error(['Invalid `help` argument supplied to deprecate, expected a string.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n    } // skip if prop is undefined\n\n\n    if (props[propName] === undefined) return; // deprecation error and help\n\n    var error = new Error(\"The `\" + propName + \"` prop in `\" + componentName + \"` is deprecated.\");\n    if (help) error.message += \" \" + help; // add optional validation error message\n\n    if (validator) {\n      if (typeof validator === 'function') {\n        for (var _len3 = arguments.length, args = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n          args[_key3 - 3] = arguments[_key3];\n        }\n\n        var validationError = validator.apply(void 0, [props, propName, componentName].concat(args));\n\n        if (validationError) {\n          error.message = error.message + \" \" + validationError.message;\n        }\n      } else {\n        throw new Error(['Invalid argument supplied to deprecate, expected a function.', \"See `\" + propName + \"` prop in `\" + componentName + \"`.\"].join(' '));\n      }\n    }\n\n    return error;\n  };\n};\n/** A checker that matches the React.RefObject type. */\n\nexport var refObject = PropTypes.shape({\n  current: PropTypes.object\n});\n/** A checker that matches the React.Ref type. */\n\nexport var ref = PropTypes.oneOfType([PropTypes.func, refObject]);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}