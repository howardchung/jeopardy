{"ast":null,"code":"import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);\n}\nexport default baseIndexOf;","map":{"version":3,"names":["baseFindIndex","baseIsNaN","strictIndexOf","baseIndexOf","array","value","fromIndex"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/lodash-es/_baseIndexOf.js"],"sourcesContent":["import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nexport default baseIndexOf;\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,qBAAqB;AAC/C,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,aAAa,MAAM,qBAAqB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAW,CAACC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAE;EAC5C,OAAOD,KAAK,KAAKA,KAAK,GAClBH,aAAa,CAACE,KAAK,EAAEC,KAAK,EAAEC,SAAS,CAAC,GACtCN,aAAa,CAACI,KAAK,EAAEH,SAAS,EAAEK,SAAS,CAAC;AAChD;AAEA,eAAeH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}