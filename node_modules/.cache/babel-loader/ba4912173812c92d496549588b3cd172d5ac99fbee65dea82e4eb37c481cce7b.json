{"ast":null,"code":"import * as React from 'react';\nvar getWindowEvent = function getWindowEvent(target) {\n  if (target) {\n    var _ownerDocument$defaul, _ownerDocument, _ownerDocument$defaul2;\n    if (typeof target.window === 'object' && target.window === target) {\n      return target.event;\n    }\n    return (_ownerDocument$defaul = (_ownerDocument = target.ownerDocument) == null ? void 0 : (_ownerDocument$defaul2 = _ownerDocument.defaultView) == null ? void 0 : _ownerDocument$defaul2.event) != null ? _ownerDocument$defaul : undefined;\n  }\n  return undefined;\n};\nvar isActionSupported = function isActionSupported(element, method) {\n  return element ? !!element[method] : false;\n};\nexport var useEventListener = function useEventListener(options) {\n  var capture = options.capture,\n    listener = options.listener,\n    type = options.type,\n    target = options.target,\n    targetRef = options.targetRef;\n  var latestListener = React.useRef(listener);\n  latestListener.current = listener;\n  var eventHandler = React.useCallback(function (event) {\n    return latestListener.current(event);\n  }, []);\n  var timeoutId = React.useRef(undefined);\n  if (process.env.NODE_ENV !== 'production') {\n    // This is fine to violate there conditional rule as environment variables will never change during component\n    // lifecycle\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (typeof target !== 'undefined' && typeof targetRef !== 'undefined') {\n        throw new Error('`target` and `targetRef` props are mutually exclusive, please use one of them.');\n      }\n      if (typeof target === 'undefined' && typeof targetRef === 'undefined') {\n        throw new Error(\"`target` and `targetRef` props are `undefined`, it' required to use one of them.\");\n      }\n    }, [target, targetRef]);\n  }\n  React.useEffect(function () {\n    var element = typeof targetRef === 'undefined' ? target : targetRef.current; // Store the current event to avoid triggering handlers immediately\n    // Note this depends on a deprecated but extremely well supported quirk of the web platform\n    // https://github.com/facebook/react/issues/20074\n\n    var currentEvent = getWindowEvent(window);\n    var conditionalHandler = function conditionalHandler(event) {\n      // Skip if this event is the same as the one running when we added the handlers\n      if (event === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n      eventHandler(event);\n    };\n    if (isActionSupported(element, 'addEventListener')) {\n      element.addEventListener(type, conditionalHandler, capture);\n    } else if (process.env.NODE_ENV !== 'production') {\n      throw new Error('@fluentui/react-component-event-listener: Passed `element` is not valid or does not support `addEventListener()` method.');\n    } // @ts-ignore We have a collision between types from DOM and @types/node\n\n    timeoutId.current = setTimeout(function () {\n      currentEvent = undefined;\n    }, 1);\n    return function () {\n      clearTimeout(timeoutId.current);\n      currentEvent = undefined;\n      if (isActionSupported(element, 'removeEventListener')) {\n        element.removeEventListener(type, conditionalHandler, capture);\n      } else if (process.env.NODE_ENV !== 'production') {\n        throw new Error('@fluentui/react-component-event-listener: Passed `element` is not valid or does not support `removeEventListener()` method.');\n      }\n    };\n  }, [capture, eventHandler, target, targetRef, type]);\n};","map":{"version":3,"mappings":"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","names":["React","getWindowEvent","target","window","event","ownerDocument","_ownerDocument","defaultView","_ownerDocument$defaul2","undefined","isActionSupported","element","method","useEventListener","options","capture","listener","type","targetRef","latestListener","useRef","current","eventHandler","useCallback","timeoutId","process","env","NODE_ENV","useEffect","Error","currentEvent","conditionalHandler","addEventListener","setTimeout","clearTimeout","removeEventListener"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/@fluentui/react-component-event-listener/dist/es/useEventListener.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { EventHandler, EventListenerOptions, EventTypes, Target } from './types';\n\nconst getWindowEvent = (target: Target): Event | undefined => {\n  if (target) {\n    if (typeof (target as Window).window === 'object' && (target as Window).window === target) {\n      return target.event;\n    }\n\n    return (target as Node).ownerDocument?.defaultView?.event ?? undefined;\n  }\n\n  return undefined;\n};\n\nconst isActionSupported = (\n  element: Target | null | undefined,\n  method: 'addEventListener' | 'removeEventListener',\n): element is Target => (element ? !!element[method] : false);\n\nexport const useEventListener = <T extends EventTypes>(options: EventListenerOptions<T>): void => {\n  const { capture, listener, type, target, targetRef } = options;\n\n  const latestListener = React.useRef<EventHandler<T>>(listener);\n  latestListener.current = listener;\n\n  const eventHandler = React.useCallback((event: DocumentEventMap[T]) => {\n    return latestListener.current(event);\n  }, []);\n\n  const timeoutId = React.useRef<number | undefined>(undefined);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This is fine to violate there conditional rule as environment variables will never change during component\n    // lifecycle\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (typeof target !== 'undefined' && typeof targetRef !== 'undefined') {\n        throw new Error('`target` and `targetRef` props are mutually exclusive, please use one of them.');\n      }\n\n      if (typeof target === 'undefined' && typeof targetRef === 'undefined') {\n        throw new Error(\"`target` and `targetRef` props are `undefined`, it' required to use one of them.\");\n      }\n    }, [target, targetRef]);\n  }\n\n  React.useEffect(() => {\n    const element: Target | null | undefined = typeof targetRef === 'undefined' ? target : targetRef.current;\n\n    // Store the current event to avoid triggering handlers immediately\n    // Note this depends on a deprecated but extremely well supported quirk of the web platform\n    // https://github.com/facebook/react/issues/20074\n    let currentEvent = getWindowEvent(window);\n\n    const conditionalHandler = (event: DocumentEventMap[T]) => {\n      // Skip if this event is the same as the one running when we added the handlers\n      if (event === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      eventHandler(event);\n    };\n\n    if (isActionSupported(element, 'addEventListener')) {\n      element.addEventListener(type, conditionalHandler, capture);\n    } else if (process.env.NODE_ENV !== 'production') {\n      throw new Error(\n        '@fluentui/react-component-event-listener: Passed `element` is not valid or does not support `addEventListener()` method.',\n      );\n    }\n\n    // @ts-ignore We have a collision between types from DOM and @types/node\n    timeoutId.current = setTimeout(() => {\n      currentEvent = undefined;\n    }, 1);\n\n    return () => {\n      clearTimeout(timeoutId.current);\n      currentEvent = undefined;\n\n      if (isActionSupported(element, 'removeEventListener')) {\n        element.removeEventListener(type, conditionalHandler, capture);\n      } else if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          '@fluentui/react-component-event-listener: Passed `element` is not valid or does not support `removeEventListener()` method.',\n        );\n      }\n    };\n  }, [capture, eventHandler, target, targetRef, type]);\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}