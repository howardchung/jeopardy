{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n    cellAs = props.cellAs,\n    cells = props.cells,\n    children = props.children,\n    className = props.className,\n    disabled = props.disabled,\n    error = props.error,\n    negative = props.negative,\n    positive = props.positive,\n    textAlign = props.textAlign,\n    verticalAlign = props.verticalAlign,\n    warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n  /** An element type to render as (string or function). */\n  cellAs: PropTypes.elementType,\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;","map":{"version":3,"names":["_extends","_without","_map","cx","PropTypes","React","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","useTextAlignProp","useVerticalAlignProp","TableCell","TableRow","props","active","cellAs","cells","children","className","disabled","error","negative","positive","textAlign","verticalAlign","warning","classes","rest","ElementType","isNil","createElement","cell","create","defaultProps","as","handledProps","propTypes","process","env","NODE_ENV","elementType","bool","collectionShorthand","node","string","oneOf","TEXT_ALIGNMENTS","VERTICAL_ALIGNMENTS"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: PropTypes.elementType,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}