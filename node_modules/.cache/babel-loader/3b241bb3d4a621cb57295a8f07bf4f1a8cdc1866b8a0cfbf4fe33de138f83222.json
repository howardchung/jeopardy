{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createHTMLImage, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A feed can contain an extra content.\n */\n\nfunction FeedExtra(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    images = props.images,\n    text = props.text;\n  var classes = cx(useKeyOnly(images, 'images'), useKeyOnly(content || text, 'text'), 'extra', className);\n  var rest = getUnhandledProps(FeedExtra, props);\n  var ElementType = getElementType(FeedExtra, props);\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  } // TODO need a \"collection factory\" to handle creating multiple image elements and their keys\n\n  var imageElements = _map(images, function (image, index) {\n    var key = [index, image].join('-');\n    return createHTMLImage(image, {\n      key: key\n    });\n  });\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, imageElements);\n}\nFeedExtra.handledProps = [\"as\", \"children\", \"className\", \"content\", \"images\", \"text\"];\nFeedExtra.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** An event can contain additional information like a set of images. */\n  images: customPropTypes.every([customPropTypes.disallow(['text']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.collectionShorthand])]),\n  /** An event can contain additional text information. */\n  text: PropTypes.bool\n} : {};\nexport default FeedExtra;","map":{"version":3,"names":["_extends","_map","cx","PropTypes","React","childrenUtils","createHTMLImage","customPropTypes","getElementType","getUnhandledProps","useKeyOnly","FeedExtra","props","children","className","content","images","text","classes","rest","ElementType","isNil","createElement","imageElements","image","index","key","join","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand","every","disallow","oneOfType","bool","collectionShorthand"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/views/Feed/FeedExtra.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createHTMLImage, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A feed can contain an extra content.\n */\n\nfunction FeedExtra(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      images = props.images,\n      text = props.text;\n  var classes = cx(useKeyOnly(images, 'images'), useKeyOnly(content || text, 'text'), 'extra', className);\n  var rest = getUnhandledProps(FeedExtra, props);\n  var ElementType = getElementType(FeedExtra, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  } // TODO need a \"collection factory\" to handle creating multiple image elements and their keys\n\n\n  var imageElements = _map(images, function (image, index) {\n    var key = [index, image].join('-');\n    return createHTMLImage(image, {\n      key: key\n    });\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, imageElements);\n}\n\nFeedExtra.handledProps = [\"as\", \"children\", \"className\", \"content\", \"images\", \"text\"];\nFeedExtra.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain additional information like a set of images. */\n  images: customPropTypes.every([customPropTypes.disallow(['text']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.collectionShorthand])]),\n\n  /** An event can contain additional text information. */\n  text: PropTypes.bool\n} : {};\nexport default FeedExtra;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,EAAE,MAAM,MAAM;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,eAAe,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,UAAU,QAAQ,WAAW;AAC1H;AACA;AACA;;AAEA,SAASC,SAAS,CAACC,KAAK,EAAE;EACxB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC3BC,OAAO,GAAGH,KAAK,CAACG,OAAO;IACvBC,MAAM,GAAGJ,KAAK,CAACI,MAAM;IACrBC,IAAI,GAAGL,KAAK,CAACK,IAAI;EACrB,IAAIC,OAAO,GAAGhB,EAAE,CAACQ,UAAU,CAACM,MAAM,EAAE,QAAQ,CAAC,EAAEN,UAAU,CAACK,OAAO,IAAIE,IAAI,EAAE,MAAM,CAAC,EAAE,OAAO,EAAEH,SAAS,CAAC;EACvG,IAAIK,IAAI,GAAGV,iBAAiB,CAACE,SAAS,EAAEC,KAAK,CAAC;EAC9C,IAAIQ,WAAW,GAAGZ,cAAc,CAACG,SAAS,EAAEC,KAAK,CAAC;EAElD,IAAI,CAACP,aAAa,CAACgB,KAAK,CAACR,QAAQ,CAAC,EAAE;IAClC,OAAO,aAAaT,KAAK,CAACkB,aAAa,CAACF,WAAW,EAAEpB,QAAQ,CAAC,CAAC,CAAC,EAAEmB,IAAI,EAAE;MACtEL,SAAS,EAAEI;IACb,CAAC,CAAC,EAAEL,QAAQ,CAAC;EACf,CAAC,CAAC;;EAGF,IAAIU,aAAa,GAAGtB,IAAI,CAACe,MAAM,EAAE,UAAUQ,KAAK,EAAEC,KAAK,EAAE;IACvD,IAAIC,GAAG,GAAG,CAACD,KAAK,EAAED,KAAK,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;IAClC,OAAOrB,eAAe,CAACkB,KAAK,EAAE;MAC5BE,GAAG,EAAEA;IACP,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAO,aAAatB,KAAK,CAACkB,aAAa,CAACF,WAAW,EAAEpB,QAAQ,CAAC,CAAC,CAAC,EAAEmB,IAAI,EAAE;IACtEL,SAAS,EAAEI;EACb,CAAC,CAAC,EAAEH,OAAO,EAAEQ,aAAa,CAAC;AAC7B;AAEAZ,SAAS,CAACiB,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC;AACrFjB,SAAS,CAACkB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC5D;EACAC,EAAE,EAAE9B,SAAS,CAAC+B,WAAW;EAEzB;EACArB,QAAQ,EAAEV,SAAS,CAACgC,IAAI;EAExB;EACArB,SAAS,EAAEX,SAAS,CAACiC,MAAM;EAE3B;EACArB,OAAO,EAAER,eAAe,CAAC8B,gBAAgB;EAEzC;EACArB,MAAM,EAAET,eAAe,CAAC+B,KAAK,CAAC,CAAC/B,eAAe,CAACgC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,EAAEpC,SAAS,CAACqC,SAAS,CAAC,CAACrC,SAAS,CAACsC,IAAI,EAAElC,eAAe,CAACmC,mBAAmB,CAAC,CAAC,CAAC,CAAC;EAE/I;EACAzB,IAAI,EAAEd,SAAS,CAACsC;AAClB,CAAC,GAAG,CAAC,CAAC;AACN,eAAe9B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}