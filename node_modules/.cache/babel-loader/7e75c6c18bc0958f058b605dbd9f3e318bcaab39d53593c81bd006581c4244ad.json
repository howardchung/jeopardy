{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A list can contain a sub list.\n */\n\nfunction ListList(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content;\n  var rest = getUnhandledProps(ListList, props);\n  var ElementType = getElementType(ListList, props);\n  var classes = cx(useKeyOnly(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\nListList.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default ListList;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","useKeyOnly","ListList","props","children","className","content","rest","ElementType","classes","createElement","isNil","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/elements/List/ListList.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A list can contain a sub list.\n */\n\nfunction ListList(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var rest = getUnhandledProps(ListList, props);\n  var ElementType = getElementType(ListList, props);\n  var classes = cx(useKeyOnly(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListList.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default ListList;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,EAAE,MAAM,MAAM;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,UAAU,QAAQ,WAAW;AACzG;AACA;AACA;;AAEA,SAASC,QAAQ,CAACC,KAAK,EAAE;EACvB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC3BC,OAAO,GAAGH,KAAK,CAACG,OAAO;EAC3B,IAAIC,IAAI,GAAGP,iBAAiB,CAACE,QAAQ,EAAEC,KAAK,CAAC;EAC7C,IAAIK,WAAW,GAAGT,cAAc,CAACG,QAAQ,EAAEC,KAAK,CAAC;EACjD,IAAIM,OAAO,GAAGf,EAAE,CAACO,UAAU,CAACO,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,IAAI,EAAE,MAAM,CAAC,EAAEH,SAAS,CAAC;EAC7F,OAAO,aAAaT,KAAK,CAACc,aAAa,CAACF,WAAW,EAAEf,QAAQ,CAAC,CAAC,CAAC,EAAEc,IAAI,EAAE;IACtEF,SAAS,EAAEI;EACb,CAAC,CAAC,EAAEZ,aAAa,CAACc,KAAK,CAACP,QAAQ,CAAC,GAAGE,OAAO,GAAGF,QAAQ,CAAC;AACzD;AAEAF,QAAQ,CAACU,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC;AAClEV,QAAQ,CAACW,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC3D;EACAC,EAAE,EAAEtB,SAAS,CAACuB,WAAW;EAEzB;EACAd,QAAQ,EAAET,SAAS,CAACwB,IAAI;EAExB;EACAd,SAAS,EAAEV,SAAS,CAACyB,MAAM;EAE3B;EACAd,OAAO,EAAER,eAAe,CAACuB;AAC3B,CAAC,GAAG,CAAC,CAAC;AACN,eAAenB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}