{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useKeyOnly } from '../../lib';\nimport AccordionAccordion from './AccordionAccordion';\nimport AccordionContent from './AccordionContent';\nimport AccordionPanel from './AccordionPanel';\nimport AccordionTitle from './AccordionTitle';\n/**\n * An accordion allows users to toggle the display of sections of content.\n */\n\nfunction Accordion(props) {\n  var className = props.className,\n    fluid = props.fluid,\n    inverted = props.inverted,\n    styled = props.styled;\n  var classes = cx('ui', useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), useKeyOnly(styled, 'styled'), className);\n  var rest = getUnhandledProps(Accordion, props);\n  return /*#__PURE__*/React.createElement(AccordionAccordion, _extends({}, rest, {\n    className: classes\n  }));\n}\nAccordion.handledProps = [\"className\", \"fluid\", \"inverted\", \"styled\"];\nAccordion.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Format to take up the width of its container. */\n  fluid: PropTypes.bool,\n  /** Format for dark backgrounds. */\n  inverted: PropTypes.bool,\n  /** Adds some basic styling to accordion panels. */\n  styled: PropTypes.bool\n} : {};\nAccordion.Accordion = AccordionAccordion;\nAccordion.Content = AccordionContent;\nAccordion.Panel = AccordionPanel;\nAccordion.Title = AccordionTitle;\nexport default Accordion;","map":{"version":3,"names":["_extends","cx","PropTypes","React","getUnhandledProps","useKeyOnly","AccordionAccordion","AccordionContent","AccordionPanel","AccordionTitle","Accordion","props","className","fluid","inverted","styled","classes","rest","createElement","handledProps","propTypes","process","env","NODE_ENV","string","bool","Content","Panel","Title"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/modules/Accordion/Accordion.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useKeyOnly } from '../../lib';\nimport AccordionAccordion from './AccordionAccordion';\nimport AccordionContent from './AccordionContent';\nimport AccordionPanel from './AccordionPanel';\nimport AccordionTitle from './AccordionTitle';\n/**\n * An accordion allows users to toggle the display of sections of content.\n */\n\nfunction Accordion(props) {\n  var className = props.className,\n      fluid = props.fluid,\n      inverted = props.inverted,\n      styled = props.styled;\n  var classes = cx('ui', useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), useKeyOnly(styled, 'styled'), className);\n  var rest = getUnhandledProps(Accordion, props);\n  return /*#__PURE__*/React.createElement(AccordionAccordion, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nAccordion.handledProps = [\"className\", \"fluid\", \"inverted\", \"styled\"];\nAccordion.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Format to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Format for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Adds some basic styling to accordion panels. */\n  styled: PropTypes.bool\n} : {};\nAccordion.Accordion = AccordionAccordion;\nAccordion.Content = AccordionContent;\nAccordion.Panel = AccordionPanel;\nAccordion.Title = AccordionTitle;\nexport default Accordion;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,EAAE,MAAM,MAAM;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,EAAEC,UAAU,QAAQ,WAAW;AACzD,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C;AACA;AACA;;AAEA,SAASC,SAAS,CAACC,KAAK,EAAE;EACxB,IAAIC,SAAS,GAAGD,KAAK,CAACC,SAAS;IAC3BC,KAAK,GAAGF,KAAK,CAACE,KAAK;IACnBC,QAAQ,GAAGH,KAAK,CAACG,QAAQ;IACzBC,MAAM,GAAGJ,KAAK,CAACI,MAAM;EACzB,IAAIC,OAAO,GAAGf,EAAE,CAAC,IAAI,EAAEI,UAAU,CAACQ,KAAK,EAAE,OAAO,CAAC,EAAER,UAAU,CAACS,QAAQ,EAAE,UAAU,CAAC,EAAET,UAAU,CAACU,MAAM,EAAE,QAAQ,CAAC,EAAEH,SAAS,CAAC;EAC7H,IAAIK,IAAI,GAAGb,iBAAiB,CAACM,SAAS,EAAEC,KAAK,CAAC;EAC9C,OAAO,aAAaR,KAAK,CAACe,aAAa,CAACZ,kBAAkB,EAAEN,QAAQ,CAAC,CAAC,CAAC,EAAEiB,IAAI,EAAE;IAC7EL,SAAS,EAAEI;EACb,CAAC,CAAC,CAAC;AACL;AAEAN,SAAS,CAACS,YAAY,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC;AACrET,SAAS,CAACU,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC5D;EACAX,SAAS,EAAEV,SAAS,CAACsB,MAAM;EAE3B;EACAX,KAAK,EAAEX,SAAS,CAACuB,IAAI;EAErB;EACAX,QAAQ,EAAEZ,SAAS,CAACuB,IAAI;EAExB;EACAV,MAAM,EAAEb,SAAS,CAACuB;AACpB,CAAC,GAAG,CAAC,CAAC;AACNf,SAAS,CAACA,SAAS,GAAGJ,kBAAkB;AACxCI,SAAS,CAACgB,OAAO,GAAGnB,gBAAgB;AACpCG,SAAS,CAACiB,KAAK,GAAGnB,cAAc;AAChCE,SAAS,CAACkB,KAAK,GAAGnB,cAAc;AAChC,eAAeC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}