{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedLike from './FeedLike';\n/**\n * A feed can contain a meta.\n */\n\nfunction FeedMeta(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    like = props.like;\n  var classes = cx('meta', className);\n  var rest = getUnhandledProps(FeedMeta, props);\n  var ElementType = getElementType(FeedMeta, props);\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedLike, function (val) {\n    return {\n      content: val\n    };\n  }, like, {\n    autoGenerateKey: false\n  }), content);\n}\nFeedMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"like\"];\nFeedMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** Shorthand for FeedLike. */\n  like: customPropTypes.itemShorthand\n} : {};\nexport default FeedMeta;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","createShorthand","customPropTypes","getElementType","getUnhandledProps","FeedLike","FeedMeta","props","children","className","content","like","classes","rest","ElementType","isNil","createElement","val","autoGenerateKey","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand","itemShorthand"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/views/Feed/FeedMeta.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedLike from './FeedLike';\n/**\n * A feed can contain a meta.\n */\n\nfunction FeedMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      like = props.like;\n  var classes = cx('meta', className);\n  var rest = getUnhandledProps(FeedMeta, props);\n  var ElementType = getElementType(FeedMeta, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedLike, function (val) {\n    return {\n      content: val\n    };\n  }, like, {\n    autoGenerateKey: false\n  }), content);\n}\n\nFeedMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"like\"];\nFeedMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedLike. */\n  like: customPropTypes.itemShorthand\n} : {};\nexport default FeedMeta;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,EAAE,MAAM,MAAM;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,eAAe,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,QAAQ,WAAW;AAC9G,OAAOC,QAAQ,MAAM,YAAY;AACjC;AACA;AACA;;AAEA,SAASC,QAAQ,CAACC,KAAK,EAAE;EACvB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC3BC,OAAO,GAAGH,KAAK,CAACG,OAAO;IACvBC,IAAI,GAAGJ,KAAK,CAACI,IAAI;EACrB,IAAIC,OAAO,GAAGf,EAAE,CAAC,MAAM,EAAEY,SAAS,CAAC;EACnC,IAAII,IAAI,GAAGT,iBAAiB,CAACE,QAAQ,EAAEC,KAAK,CAAC;EAC7C,IAAIO,WAAW,GAAGX,cAAc,CAACG,QAAQ,EAAEC,KAAK,CAAC;EAEjD,IAAI,CAACP,aAAa,CAACe,KAAK,CAACP,QAAQ,CAAC,EAAE;IAClC,OAAO,aAAaT,KAAK,CAACiB,aAAa,CAACF,WAAW,EAAElB,QAAQ,CAAC,CAAC,CAAC,EAAEiB,IAAI,EAAE;MACtEJ,SAAS,EAAEG;IACb,CAAC,CAAC,EAAEJ,QAAQ,CAAC;EACf;EAEA,OAAO,aAAaT,KAAK,CAACiB,aAAa,CAACF,WAAW,EAAElB,QAAQ,CAAC,CAAC,CAAC,EAAEiB,IAAI,EAAE;IACtEJ,SAAS,EAAEG;EACb,CAAC,CAAC,EAAEX,eAAe,CAACI,QAAQ,EAAE,UAAUY,GAAG,EAAE;IAC3C,OAAO;MACLP,OAAO,EAAEO;IACX,CAAC;EACH,CAAC,EAAEN,IAAI,EAAE;IACPO,eAAe,EAAE;EACnB,CAAC,CAAC,EAAER,OAAO,CAAC;AACd;AAEAJ,QAAQ,CAACa,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,CAAC;AAC1Eb,QAAQ,CAACc,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC3D;EACAC,EAAE,EAAE1B,SAAS,CAAC2B,WAAW;EAEzB;EACAjB,QAAQ,EAAEV,SAAS,CAAC4B,IAAI;EAExB;EACAjB,SAAS,EAAEX,SAAS,CAAC6B,MAAM;EAE3B;EACAjB,OAAO,EAAER,eAAe,CAAC0B,gBAAgB;EAEzC;EACAjB,IAAI,EAAET,eAAe,CAAC2B;AACxB,CAAC,GAAG,CAAC,CAAC;AACN,eAAevB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}