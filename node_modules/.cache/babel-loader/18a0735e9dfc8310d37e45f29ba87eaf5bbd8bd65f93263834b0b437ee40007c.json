{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * Comments can be grouped.\n */\n\nfunction CommentGroup(props) {\n  var className = props.className,\n    children = props.children,\n    collapsed = props.collapsed,\n    content = props.content,\n    minimal = props.minimal,\n    size = props.size,\n    threaded = props.threaded;\n  var classes = cx('ui', size, useKeyOnly(collapsed, 'collapsed'), useKeyOnly(minimal, 'minimal'), useKeyOnly(threaded, 'threaded'), 'comments', className);\n  var rest = getUnhandledProps(CommentGroup, props);\n  var ElementType = getElementType(CommentGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\nCommentGroup.handledProps = [\"as\", \"children\", \"className\", \"collapsed\", \"content\", \"minimal\", \"size\", \"threaded\"];\nCommentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Comments can be collapsed, or hidden from view. */\n  collapsed: PropTypes.bool,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** Comments can hide extra information unless a user shows intent to interact with a comment. */\n  minimal: PropTypes.bool,\n  /** Comments can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n  /** A comment list can be threaded to showing the relationship between conversations. */\n  threaded: PropTypes.bool\n} : {};\nexport default CommentGroup;","map":{"version":3,"names":["_extends","_without","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","CommentGroup","props","className","children","collapsed","content","minimal","size","threaded","classes","rest","ElementType","createElement","isNil","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","bool","contentShorthand","oneOf","SIZES"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/views/Comment/CommentGroup.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * Comments can be grouped.\n */\n\nfunction CommentGroup(props) {\n  var className = props.className,\n      children = props.children,\n      collapsed = props.collapsed,\n      content = props.content,\n      minimal = props.minimal,\n      size = props.size,\n      threaded = props.threaded;\n  var classes = cx('ui', size, useKeyOnly(collapsed, 'collapsed'), useKeyOnly(minimal, 'minimal'), useKeyOnly(threaded, 'threaded'), 'comments', className);\n  var rest = getUnhandledProps(CommentGroup, props);\n  var ElementType = getElementType(CommentGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCommentGroup.handledProps = [\"as\", \"children\", \"className\", \"collapsed\", \"content\", \"minimal\", \"size\", \"threaded\"];\nCommentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Comments can be collapsed, or hidden from view. */\n  collapsed: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Comments can hide extra information unless a user shows intent to interact with a comment. */\n  minimal: PropTypes.bool,\n\n  /** Comments can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A comment list can be threaded to showing the relationship between conversations. */\n  threaded: PropTypes.bool\n} : {};\nexport default CommentGroup;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,EAAE,MAAM,MAAM;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,GAAG,EAAEC,UAAU,QAAQ,WAAW;AAC9G;AACA;AACA;;AAEA,SAASC,YAAY,CAACC,KAAK,EAAE;EAC3B,IAAIC,SAAS,GAAGD,KAAK,CAACC,SAAS;IAC3BC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;IACzBC,SAAS,GAAGH,KAAK,CAACG,SAAS;IAC3BC,OAAO,GAAGJ,KAAK,CAACI,OAAO;IACvBC,OAAO,GAAGL,KAAK,CAACK,OAAO;IACvBC,IAAI,GAAGN,KAAK,CAACM,IAAI;IACjBC,QAAQ,GAAGP,KAAK,CAACO,QAAQ;EAC7B,IAAIC,OAAO,GAAGlB,EAAE,CAAC,IAAI,EAAEgB,IAAI,EAAER,UAAU,CAACK,SAAS,EAAE,WAAW,CAAC,EAAEL,UAAU,CAACO,OAAO,EAAE,SAAS,CAAC,EAAEP,UAAU,CAACS,QAAQ,EAAE,UAAU,CAAC,EAAE,UAAU,EAAEN,SAAS,CAAC;EACzJ,IAAIQ,IAAI,GAAGb,iBAAiB,CAACG,YAAY,EAAEC,KAAK,CAAC;EACjD,IAAIU,WAAW,GAAGf,cAAc,CAACI,YAAY,EAAEC,KAAK,CAAC;EACrD,OAAO,aAAaR,KAAK,CAACmB,aAAa,CAACD,WAAW,EAAEtB,QAAQ,CAAC,CAAC,CAAC,EAAEqB,IAAI,EAAE;IACtER,SAAS,EAAEO;EACb,CAAC,CAAC,EAAEf,aAAa,CAACmB,KAAK,CAACV,QAAQ,CAAC,GAAGE,OAAO,GAAGF,QAAQ,CAAC;AACzD;AAEAH,YAAY,CAACc,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,CAAC;AAClHd,YAAY,CAACe,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC/D;EACAC,EAAE,EAAE3B,SAAS,CAAC4B,WAAW;EAEzB;EACAjB,QAAQ,EAAEX,SAAS,CAAC6B,IAAI;EAExB;EACAnB,SAAS,EAAEV,SAAS,CAAC8B,MAAM;EAE3B;EACAlB,SAAS,EAAEZ,SAAS,CAAC+B,IAAI;EAEzB;EACAlB,OAAO,EAAEV,eAAe,CAAC6B,gBAAgB;EAEzC;EACAlB,OAAO,EAAEd,SAAS,CAAC+B,IAAI;EAEvB;EACAhB,IAAI,EAAEf,SAAS,CAACiC,KAAK,CAACnC,QAAQ,CAACQ,GAAG,CAAC4B,KAAK,EAAE,QAAQ,CAAC,CAAC;EAEpD;EACAlB,QAAQ,EAAEhB,SAAS,CAAC+B;AACtB,CAAC,GAAG,CAAC,CAAC;AACN,eAAevB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}