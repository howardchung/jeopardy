{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Card, _Component);\n  function Card() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    };\n    return _this;\n  }\n  var _proto = Card.prototype;\n  _proto.render = function render() {\n    var _this$props = this.props,\n      centered = _this$props.centered,\n      children = _this$props.children,\n      className = _this$props.className,\n      color = _this$props.color,\n      content = _this$props.content,\n      description = _this$props.description,\n      extra = _this$props.extra,\n      fluid = _this$props.fluid,\n      header = _this$props.header,\n      href = _this$props.href,\n      image = _this$props.image,\n      link = _this$props.link,\n      meta = _this$props.meta,\n      onClick = _this$props.onClick,\n      raised = _this$props.raised;\n    var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n    var rest = getUnhandledProps(Card, this.props);\n    var ElementType = getElementType(Card, this.props, function () {\n      if (onClick) return 'a';\n    });\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), children);\n    }\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), content);\n    }\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      href: href,\n      onClick: this.handleClick\n    }), Image.create(image, {\n      autoGenerateKey: false,\n      defaultProps: {\n        ui: false,\n        wrapped: true\n      }\n    }), (description || header || meta) && /*#__PURE__*/React.createElement(CardContent, {\n      description: description,\n      header: header,\n      meta: meta\n    }), extra && /*#__PURE__*/React.createElement(CardContent, {\n      extra: true\n    }, extra));\n  };\n  return Card;\n}(Component);\nCard.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"];\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};\nCard.Content = CardContent;\nCard.Description = CardDescription;\nCard.Group = CardGroup;\nCard.Header = CardHeader;\nCard.Meta = CardMeta;","map":{"version":3,"names":["_extends","_inheritsLoose","cx","PropTypes","React","Component","childrenUtils","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","Image","CardContent","CardDescription","CardGroup","CardHeader","CardMeta","Card","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","handleClick","e","onClick","props","_proto","prototype","render","_this$props","centered","children","className","color","content","description","extra","fluid","header","href","image","link","meta","raised","classes","rest","ElementType","isNil","createElement","create","autoGenerateKey","defaultProps","ui","wrapped","handledProps","default","propTypes","process","env","NODE_ENV","as","elementType","bool","node","string","oneOf","COLORS","contentShorthand","itemShorthand","func","Content","Description","Group","Header","Meta"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/views/Card/Card.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Card, _Component);\n\n  function Card() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    };\n\n    return _this;\n  }\n\n  var _proto = Card.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        centered = _this$props.centered,\n        children = _this$props.children,\n        className = _this$props.className,\n        color = _this$props.color,\n        content = _this$props.content,\n        description = _this$props.description,\n        extra = _this$props.extra,\n        fluid = _this$props.fluid,\n        header = _this$props.header,\n        href = _this$props.href,\n        image = _this$props.image,\n        link = _this$props.link,\n        meta = _this$props.meta,\n        onClick = _this$props.onClick,\n        raised = _this$props.raised;\n    var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n    var rest = getUnhandledProps(Card, this.props);\n    var ElementType = getElementType(Card, this.props, function () {\n      if (onClick) return 'a';\n    });\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      href: href,\n      onClick: this.handleClick\n    }), Image.create(image, {\n      autoGenerateKey: false,\n      defaultProps: {\n        ui: false,\n        wrapped: true\n      }\n    }), (description || header || meta) && /*#__PURE__*/React.createElement(CardContent, {\n      description: description,\n      header: header,\n      meta: meta\n    }), extra && /*#__PURE__*/React.createElement(CardContent, {\n      extra: true\n    }, extra));\n  };\n\n  return Card;\n}(Component);\n\nCard.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"];\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};\nCard.Content = CardContent;\nCard.Description = CardDescription;\nCard.Group = CardGroup;\nCard.Header = CardHeader;\nCard.Meta = CardMeta;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}