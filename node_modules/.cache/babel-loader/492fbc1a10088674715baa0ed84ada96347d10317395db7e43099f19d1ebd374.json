{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * A dropdown menu can contain dividers to separate related content.\n */\n\nfunction DropdownDivider(props) {\n  var className = props.className;\n  var classes = cx('divider', className);\n  var rest = getUnhandledProps(DropdownDivider, props);\n  var ElementType = getElementType(DropdownDivider, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }));\n}\nDropdownDivider.handledProps = [\"as\", \"className\"];\nDropdownDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default DropdownDivider;","map":{"version":3,"names":["_extends","cx","PropTypes","React","getElementType","getUnhandledProps","DropdownDivider","props","className","classes","rest","ElementType","createElement","handledProps","propTypes","process","env","NODE_ENV","as","elementType","string"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/modules/Dropdown/DropdownDivider.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * A dropdown menu can contain dividers to separate related content.\n */\n\nfunction DropdownDivider(props) {\n  var className = props.className;\n  var classes = cx('divider', className);\n  var rest = getUnhandledProps(DropdownDivider, props);\n  var ElementType = getElementType(DropdownDivider, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nDropdownDivider.handledProps = [\"as\", \"className\"];\nDropdownDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default DropdownDivider;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,EAAE,MAAM,MAAM;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,WAAW;AAC7D;AACA;AACA;;AAEA,SAASC,eAAe,CAACC,KAAK,EAAE;EAC9B,IAAIC,SAAS,GAAGD,KAAK,CAACC,SAAS;EAC/B,IAAIC,OAAO,GAAGR,EAAE,CAAC,SAAS,EAAEO,SAAS,CAAC;EACtC,IAAIE,IAAI,GAAGL,iBAAiB,CAACC,eAAe,EAAEC,KAAK,CAAC;EACpD,IAAII,WAAW,GAAGP,cAAc,CAACE,eAAe,EAAEC,KAAK,CAAC;EACxD,OAAO,aAAaJ,KAAK,CAACS,aAAa,CAACD,WAAW,EAAEX,QAAQ,CAAC,CAAC,CAAC,EAAEU,IAAI,EAAE;IACtEF,SAAS,EAAEC;EACb,CAAC,CAAC,CAAC;AACL;AAEAH,eAAe,CAACO,YAAY,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC;AAClDP,eAAe,CAACQ,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAClE;EACAC,EAAE,EAAEhB,SAAS,CAACiB,WAAW;EAEzB;EACAX,SAAS,EAAEN,SAAS,CAACkB;AACvB,CAAC,GAAG,CAAC,CAAC;AACN,eAAed,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}