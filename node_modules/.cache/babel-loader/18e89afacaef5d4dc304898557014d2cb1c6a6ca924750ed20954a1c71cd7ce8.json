{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder can contain have lines of text.\n */\n\nfunction PlaceholderLine(props) {\n  var className = props.className,\n    length = props.length;\n  var classes = cx('line', length, className);\n  var rest = getUnhandledProps(PlaceholderLine, props);\n  var ElementType = getElementType(PlaceholderLine, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }));\n}\nPlaceholderLine.handledProps = [\"as\", \"className\", \"length\"];\nPlaceholderLine.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** A line can specify how long its contents should appear. */\n  length: PropTypes.oneOf(['full', 'very long', 'long', 'medium', 'short', 'very short'])\n} : {};\nexport default PlaceholderLine;","map":{"version":3,"names":["_extends","cx","PropTypes","React","getElementType","getUnhandledProps","PlaceholderLine","props","className","length","classes","rest","ElementType","createElement","handledProps","propTypes","process","env","NODE_ENV","as","elementType","string","oneOf"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/elements/Placeholder/PlaceholderLine.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder can contain have lines of text.\n */\n\nfunction PlaceholderLine(props) {\n  var className = props.className,\n      length = props.length;\n  var classes = cx('line', length, className);\n  var rest = getUnhandledProps(PlaceholderLine, props);\n  var ElementType = getElementType(PlaceholderLine, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nPlaceholderLine.handledProps = [\"as\", \"className\", \"length\"];\nPlaceholderLine.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A line can specify how long its contents should appear. */\n  length: PropTypes.oneOf(['full', 'very long', 'long', 'medium', 'short', 'very short'])\n} : {};\nexport default PlaceholderLine;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,EAAE,MAAM,MAAM;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,WAAW;AAC7D;AACA;AACA;;AAEA,SAASC,eAAe,CAACC,KAAK,EAAE;EAC9B,IAAIC,SAAS,GAAGD,KAAK,CAACC,SAAS;IAC3BC,MAAM,GAAGF,KAAK,CAACE,MAAM;EACzB,IAAIC,OAAO,GAAGT,EAAE,CAAC,MAAM,EAAEQ,MAAM,EAAED,SAAS,CAAC;EAC3C,IAAIG,IAAI,GAAGN,iBAAiB,CAACC,eAAe,EAAEC,KAAK,CAAC;EACpD,IAAIK,WAAW,GAAGR,cAAc,CAACE,eAAe,EAAEC,KAAK,CAAC;EACxD,OAAO,aAAaJ,KAAK,CAACU,aAAa,CAACD,WAAW,EAAEZ,QAAQ,CAAC,CAAC,CAAC,EAAEW,IAAI,EAAE;IACtEH,SAAS,EAAEE;EACb,CAAC,CAAC,CAAC;AACL;AAEAJ,eAAe,CAACQ,YAAY,GAAG,CAAC,IAAI,EAAE,WAAW,EAAE,QAAQ,CAAC;AAC5DR,eAAe,CAACS,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAClE;EACAC,EAAE,EAAEjB,SAAS,CAACkB,WAAW;EAEzB;EACAZ,SAAS,EAAEN,SAAS,CAACmB,MAAM;EAE3B;EACAZ,MAAM,EAAEP,SAAS,CAACoB,KAAK,CAAC,CAAC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,CAAC;AACxF,CAAC,GAAG,CAAC,CAAC;AACN,eAAehB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}