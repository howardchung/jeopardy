{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n    className = props.className,\n    computer = props.computer,\n    color = props.color,\n    floated = props.floated,\n    largeScreen = props.largeScreen,\n    mobile = props.mobile,\n    only = props.only,\n    stretched = props.stretched,\n    tablet = props.tablet,\n    textAlign = props.textAlign,\n    verticalAlign = props.verticalAlign,\n    widescreen = props.widescreen,\n    width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","map":{"version":3,"names":["_extends","cx","PropTypes","React","customPropTypes","createShorthandFactory","getElementType","getUnhandledProps","SUI","useKeyOnly","useMultipleProp","useTextAlignProp","useValueAndKey","useVerticalAlignProp","useWidthProp","GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","rest","ElementType","createElement","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","oneOf","COLORS","every","disallow","WIDTHS","FLOATS","multipleProp","VISIBILITY","bool","TEXT_ALIGNMENTS","VERTICAL_ALIGNMENTS","create"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}