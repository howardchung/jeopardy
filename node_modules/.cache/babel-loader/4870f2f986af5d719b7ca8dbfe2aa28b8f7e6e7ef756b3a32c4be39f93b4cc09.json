{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\nfunction TableBody(props) {\n  var children = props.children,\n    className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\nTableBody.handledProps = [\"as\", \"children\", \"className\"];\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;","map":{"version":3,"names":["_extends","cx","PropTypes","React","getElementType","getUnhandledProps","TableBody","props","children","className","classes","rest","ElementType","createElement","handledProps","defaultProps","as","propTypes","process","env","NODE_ENV","elementType","node","string"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n\nfunction TableBody(props) {\n  var children = props.children,\n      className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nTableBody.handledProps = [\"as\", \"children\", \"className\"];\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,EAAE,MAAM,MAAM;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,WAAW;AAE7D,SAASC,SAAS,CAACC,KAAK,EAAE;EACxB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,SAAS,GAAGF,KAAK,CAACE,SAAS;EAC/B,IAAIC,OAAO,GAAGT,EAAE,CAACQ,SAAS,CAAC;EAC3B,IAAIE,IAAI,GAAGN,iBAAiB,CAACC,SAAS,EAAEC,KAAK,CAAC;EAC9C,IAAIK,WAAW,GAAGR,cAAc,CAACE,SAAS,EAAEC,KAAK,CAAC;EAClD,OAAO,aAAaJ,KAAK,CAACU,aAAa,CAACD,WAAW,EAAEZ,QAAQ,CAAC,CAAC,CAAC,EAAEW,IAAI,EAAE;IACtEF,SAAS,EAAEC;EACb,CAAC,CAAC,EAAEF,QAAQ,CAAC;AACf;AAEAF,SAAS,CAACQ,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,CAAC;AACxDR,SAAS,CAACS,YAAY,GAAG;EACvBC,EAAE,EAAE;AACN,CAAC;AACDV,SAAS,CAACW,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC5D;EACAJ,EAAE,EAAEd,SAAS,CAACmB,WAAW;EAEzB;EACAb,QAAQ,EAAEN,SAAS,CAACoB,IAAI;EAExB;EACAb,SAAS,EAAEP,SAAS,CAACqB;AACvB,CAAC,GAAG,CAAC,CAAC;AACN,eAAejB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}