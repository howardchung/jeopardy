{"ast":null,"code":"import { createFirstPage, createLastItem, createNextItem, createPageFactory, createPrevItem } from './itemFactories';\nimport { createComplexRange, createSimpleRange } from './rangeFactories';\nimport { isSimplePagination, typifyOptions } from './paginationUtils';\n/**\n * @param {object} rawOptions\n * @param {number|string} rawOptions.activePage\n * @param {number|string} rawOptions.boundaryRange Number of always visible pages at the beginning and end.\n * @param {boolean} rawOptions.hideEllipsis Marks if ellipsis should be hidden.\n * @param {number|string} rawOptions.siblingRange Number of always visible pages before and after the current one.\n * @param {number|string} rawOptions.totalPages Total number of pages.\n */\n\nvar createPaginationItems = function createPaginationItems(rawOptions) {\n  var options = typifyOptions(rawOptions);\n  var activePage = options.activePage,\n    totalPages = options.totalPages;\n  var pageFactory = createPageFactory(activePage);\n  var innerRange = isSimplePagination(options) ? createSimpleRange(1, totalPages, pageFactory) : createComplexRange(options, pageFactory);\n  return [createFirstPage(), createPrevItem(activePage)].concat(innerRange, [createNextItem(activePage, totalPages), createLastItem(totalPages)]);\n};\nexport default createPaginationItems;","map":{"version":3,"names":["createFirstPage","createLastItem","createNextItem","createPageFactory","createPrevItem","createComplexRange","createSimpleRange","isSimplePagination","typifyOptions","createPaginationItems","rawOptions","options","activePage","totalPages","pageFactory","innerRange","concat"],"sources":["/home/runner/work/jeopardy/jeopardy/node_modules/semantic-ui-react/dist/es/lib/createPaginationItems/createPaginationItems.js"],"sourcesContent":["import { createFirstPage, createLastItem, createNextItem, createPageFactory, createPrevItem } from './itemFactories';\nimport { createComplexRange, createSimpleRange } from './rangeFactories';\nimport { isSimplePagination, typifyOptions } from './paginationUtils';\n/**\n * @param {object} rawOptions\n * @param {number|string} rawOptions.activePage\n * @param {number|string} rawOptions.boundaryRange Number of always visible pages at the beginning and end.\n * @param {boolean} rawOptions.hideEllipsis Marks if ellipsis should be hidden.\n * @param {number|string} rawOptions.siblingRange Number of always visible pages before and after the current one.\n * @param {number|string} rawOptions.totalPages Total number of pages.\n */\n\nvar createPaginationItems = function createPaginationItems(rawOptions) {\n  var options = typifyOptions(rawOptions);\n  var activePage = options.activePage,\n      totalPages = options.totalPages;\n  var pageFactory = createPageFactory(activePage);\n  var innerRange = isSimplePagination(options) ? createSimpleRange(1, totalPages, pageFactory) : createComplexRange(options, pageFactory);\n  return [createFirstPage(), createPrevItem(activePage)].concat(innerRange, [createNextItem(activePage, totalPages), createLastItem(totalPages)]);\n};\n\nexport default createPaginationItems;"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,cAAc,QAAQ,iBAAiB;AACpH,SAASC,kBAAkB,EAAEC,iBAAiB,QAAQ,kBAAkB;AACxE,SAASC,kBAAkB,EAAEC,aAAa,QAAQ,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,qBAAqB,GAAG,SAASA,qBAAqB,CAACC,UAAU,EAAE;EACrE,IAAIC,OAAO,GAAGH,aAAa,CAACE,UAAU,CAAC;EACvC,IAAIE,UAAU,GAAGD,OAAO,CAACC,UAAU;IAC/BC,UAAU,GAAGF,OAAO,CAACE,UAAU;EACnC,IAAIC,WAAW,GAAGX,iBAAiB,CAACS,UAAU,CAAC;EAC/C,IAAIG,UAAU,GAAGR,kBAAkB,CAACI,OAAO,CAAC,GAAGL,iBAAiB,CAAC,CAAC,EAAEO,UAAU,EAAEC,WAAW,CAAC,GAAGT,kBAAkB,CAACM,OAAO,EAAEG,WAAW,CAAC;EACvI,OAAO,CAACd,eAAe,EAAE,EAAEI,cAAc,CAACQ,UAAU,CAAC,CAAC,CAACI,MAAM,CAACD,UAAU,EAAE,CAACb,cAAc,CAACU,UAAU,EAAEC,UAAU,CAAC,EAAEZ,cAAc,CAACY,UAAU,CAAC,CAAC,CAAC;AACjJ,CAAC;AAED,eAAeJ,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}